# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java
trigger:
  branches:
    include:
      - master
  paths:
    exclude:
      - README.md
      - .gitignore
pool:
  name: dps-build
  demands: maven
steps:
  - task: Maven@3
    displayName: 'build, test, code coverage'
    inputs:
      mavenPomFile: 'pom.xml'
      options: '--settings ./indexer-core/maven/settings.xml -DVSTS_FEED_TOKEN=$(VSTS_FEED_TOKEN) -U'
      testResultsFiles: '**/*/TEST-*.xml'
      codeCoverageToolOption: JaCoCo
      goals: 'install'
  - task: Maven@3
    displayName: 'build, test, code coverage'
    inputs:
      mavenPomFile: 'pom.xml'
      options: '--settings ./provider/indexer-aws/maven/settings.xml -DVSTS_FEED_TOKEN=$(VSTS_FEED_TOKEN) -U -P indexer-aws'
      testResultsFiles: '**/*/TEST-*.xml'
      codeCoverageToolOption: JaCoCo
      goals: 'install'
  - task: CopyFiles@2
    displayName: 'Copy AWS artifacts for maven deploy to: $(build.artifactstagingdirectory)'
    inputs:
      SourceFolder:
      Contents: |
        provider/indexer-aws/CloudFormation
        provider/indexer-aws/buildspec-post-deploy.yml
        provider/indexer-aws/buildspec-pre-deploy.yml
        provider/indexer-aws/target/*-spring-boot.jar
      TargetFolder: '$(build.artifactstagingdirectory)'

  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact: drop'
    inputs:
      PathtoPublish: '$(build.artifactstagingdirectory)'
      ArtifactName: 'drop'
      publishLocation: 'Container'
    condition: succeededOrFailed()
