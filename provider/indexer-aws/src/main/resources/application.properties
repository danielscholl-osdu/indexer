# Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

LOG_PREFIX=indexer

server.servlet.contextPath=/api/indexer/v2/
AUTHORIZE_API=${ENTITLEMENTS_BASE_URL}/api/entitlements/v2
logging.level.org.springframework.web=${LOG_LEVEL}
server.port=${APPLICATION_PORT}

aws.threads=50
DEFAULT_DATA_COUNTRY=US
CRON_INDEX_CLEANUP_THRESHOLD_DAYS=3
CRON_EMPTY_INDEX_CLEANUP_THRESHOLD_DAYS=7

# AWS ES configuration
aws.es.host=${ELASTIC_HOST:}
aws.es.port=${ELASTIC_PORT:0}
aws.es.isHttps=${ELASTIC_HTTPS:true}
aws.es.username=${ELASTIC_USERNAME:empty}
aws.es.password=${ELASTIC_PASSWORD:empty}
aws.region=${AWS_REGION}
aws.es.serviceName=es
aws.es.certificate.disableTrust=${ELASTIC_DISABLE_CERTIFICATE_TRUST:false}

GAE_SERVICE=indexer

#reusing STORAGE_BASE_URL variable here as the base url to point to schema service
SCHEMA_HOST=${SCHEMA_BASE_URL}/api/schema-service/v1/schema
SEARCH_HOST=${SEARCH_BASE_URL}/api/search/v2

PARTITION_PATH=/api/partition/v1
PARTITION_API=${PARTITION_BASE_URL}${PARTITION_PATH}

STORAGE_SCHEMA_HOST=${STORAGE_BASE_URL}/api/storage/v2/schemas
STORAGE_QUERY_RECORD_HOST=${STORAGE_BASE_URL}/api/storage/v2/query/records
STORAGE_QUERY_KINDS_HOST=${STORAGE_BASE_URL}/api/storage/v2/query/kinds
STORAGE_QUERY_RECORD_FOR_CONVERSION_HOST=${STORAGE_BASE_URL}/api/storage/v2/query/records:batch
STORAGE_RECORDS_BATCH_SIZE=20
INDEXER_QUEUE_HOST=""

OSDU_TOPIC=${OSDU_INDEXER_TOPIC:indexer-status-changed}

## AWS ElastiCache configuration
aws.elasticache.cluster.endpoint=${CACHE_CLUSTER_ENDPOINT:null}
aws.elasticache.cluster.port=${CACHE_CLUSTER_PORT:null}
aws.elasticache.cluster.key=${CACHE_CLUSTER_KEY:null}
## Cache Settings
aws.elasticache.cluster.index.expiration=60
aws.elasticache.cluster.schema.expiration=60

# AWS user agent variables
aws.disableUserAgent=${DISABLE_USER_AGENT}
aws.osduVersion=${OSDU_VERSION}

# Maximum size of cache value
MAX_CACHE_VALUE_SIZE=1000

## AWS Lambda configuration
#aws.lambda.get-groups-function-name=${ENVIRONMENT}-os-entitlements-GroupsFunction

aws.ssm=${SSM_ENABLED}



server.ssl.enabled=${SSL_ENABLED:true}
server.ssl.key-store-type=PKCS12
server.ssl.key-store=${SSL_KEY_STORE_PATH:/certs/osduonaws.p12}
server.ssl.key-alias=${SSL_KEY_ALIAS:osduonaws}
server.ssl.key-password=${SSL_KEY_PASSWORD:}
server.ssl.key-store-password=${SSL_KEY_STORE_PASSWORD:}

spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.security.SecurityAutoConfiguration

# AsIngestedCoordinates feature flag name
featureFlag.strategy=appProperty
as-ingested-coordinates-enabled=true
