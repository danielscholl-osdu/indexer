#Manage common SpringDoc and OpenAPI related properties

#SpringDoc related properties
springdoc.swagger-ui.tagsSorter=alpha
springdoc.swagger-ui.operationsSorter=alpha
springdoc.swagger-ui.doc-expansion=none
springdoc.swagger-ui.path=/swagger
springdoc.swagger-ui.displayOperationId=true
springdoc.api-docs.path=/api-docs

#OpenAPI 3.0 - Indexer Service properties
swagger.apiTitle=Indexer Service
swagger.apiDescription=Indexer service creates an index, which is a methodical arrangement of records designed to enable users to locate information quickly.
swagger.apiVersion=2.0
swagger.apiContactName=OSDU Data Platform Team
swagger.apiContactEmail=dps@OSDU.org
swagger.apiLicenseName=Apache 2.0
swagger.apiLicenseUrl=https://www.apache.org/licenses/LICENSE-2.0.html
swagger.apiServerUrl=${server.servlet.contextPath:/api/indexer/v2/}
swagger.apiServerFullUrlEnabled=${api.server.fullUrl.enabled:false}

#CleanupIndiciesApi related properties
cleanupIndiciesApi.deleteIndex.summary=Delete Index for the given kind
cleanupIndiciesApi.deleteIndex.description=Delete Index for the given kind. Required roles: `users.datalake.ops`

#PartitionSetupApi related properties
partitionSetupApi.provisionPartition.summary=Provision partition
partitionSetupApi.provisionPartition.description=Provision partition. Required roles: `users.datalake.ops`

#Reindex API related properties
reindexApi.reindex.summary=Re-index given 'kind'
reindexApi.reindex.description=This API allows users to re-index a 'kind' without re-ingesting the records via storage API. \
Required roles: `service.search.admin`
reindexApi.reindexRecords.summary=Re-index given records
reindexApi.reindexRecords.description=This API allows users to re-index the given records by providing record ids without \
re-ingesting the records via storage API. Required roles: `service.search.admin`
reindexApi.fullReindex.summary=Full Re-index by data partition
reindexApi.fullReindex.description=This API allows users to re-index an entire partition without re-ingesting the records via storage API.\
Required roles: `users.datalake.ops`

#Info & Health API related properties
infoApi.info.summary=Version info
infoApi.info.description=For deployment available public `/info` endpoint, which provides build and git related information.
healthCheckApi.livenessCheck.summary=Liveness Check endpoint
healthCheckApi.livenessCheck.description=For deployment available public `/liveness_check` endpoint.
healthCheckApi.readinessCheck.summary=Readiness Check endpoint
healthCheckApi.readinessCheck.description=For deployment available public `/readiness_check` endpoint.
